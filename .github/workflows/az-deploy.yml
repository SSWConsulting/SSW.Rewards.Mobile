name: Deploy

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      RESOURCE_GROUP:
        required: true
        type: string
      APP_SERVICE_PLAN:
        required: true
        type: string
      APP_SERVICE_PLAN_RESOURCE_GROUP:
        required: true
        type: string
      ADMIN_PORTAL_URL:
        required: true
        type: string
      IDS_URL:
        required: true
        type: string
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      SQL_ADMIN_GROUP:
        required: true
      SQL_ADMIN_GROUP_SID:
        required: true
      GRAPH_TENANT_ID:
        required: false
      GRAPH_CLIENT_ID:
        required: false
      GRAPH_CLIENT_SECRET:
        required: false


permissions:
  id-token: write
  contents: read
  
jobs:

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT }}
    steps:

    # Download artifacts from build
    - name: Download Artifacts
      uses: actions/download-artifact@v4

    # Log into Azure
    - name: Login
      uses: azure/login@v2
      with:
        # creds: ${{ secrets.AZURE_CREDENTIALS }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        
    # Create Azure infrastructure
    - name: Azure deploy
      id: bicep
      shell: pwsh
      env:
        sqlAdminGroup: ${{ secrets.SQL_ADMIN_GROUP }}
        sqlAdminSid: ${{ secrets.SQL_ADMIN_GROUP_SID }}
        # graphTenantId: ${{ secrets.GRAPH_TENANT_ID }}
        # graphClientId: ${{ secrets.GRAPH_CLIENT_ID }}
        # graphClientSecret: ${{ secrets.GRAPH_CLIENT_SECRET }}

        # TODO: add these back in when moved to Keeper
        # graphTenantId=$env:graphTenantId `
        # graphClientId=$env:graphClientId `
        # graphClientSecret=$env:graphClientSecret `
      run: | 
        $out = az deployment group create `
          --resource-group ${{ inputs.RESOURCE_GROUP }} `
          --template-file ./infra/main.bicep `
          --parameters environment=${{ inputs.ENVIRONMENT }} `
            appServicePlanName=${{ inputs.APP_SERVICE_PLAN }} `
            appServicePlanResourceGroup=${{ inputs.APP_SERVICE_PLAN_RESOURCE_GROUP }} `
            sqlAdministratorsLoginName=$env:sqlAdminGroup `
            sqlAdministratorsObjectId=$env:sqlAdminSid `
            adminPortalUrl=${{ inputs.ADMIN_PORTAL_URL }} `
            idsUrl=${{ inputs.IDS_URL }} `
            | convertfrom-json | foreach properties | foreach outputs
        $out | Get-Member -MemberType NoteProperty | ForEach-Object {
            $keyname = $_.Name
            $value = $out.$keyname.value
            echo "::set-output name=$keyname::$value" }
            
    
    # Deploy Web API
    - name: Deploy API
      uses: azure/webapps-deploy@v2
      with: 
        app-name: ${{ steps.bicep.outputs.appServiceName }}
        package: './api/api.zip'
