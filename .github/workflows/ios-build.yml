name: Build iOS app

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      build_number:
        required: true
        type: string

jobs:
  build:
    runs-on: macos-14
    environment: ${{ inputs.environment }}
    name: iOS Build

    steps:
      - uses: actions/checkout@v3

      - name: Update Build Number
        run: sed -i '' "s|<ApplicationVersion>.*</ApplicationVersion>|<ApplicationVersion>${{ inputs.build_number }}</ApplicationVersion>|g" src/MobileUI/MobileUI.csproj

      - name: Update GoogleService-Info.plist
        shell: bash
        run: |
          echo ${{ vars.GOOGLESERVICE_INFO_PLIST }} | base64 --decode > src/MobileUI/Platforms/iOS/GoogleService-Info.plist

      - name: Setup DotNet Environment
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Install MAUI Workload
        run: |
          dotnet nuget locals all --clear
          dotnet workload install maui --ignore-failed-sources
          dotnet workload install ios maui wasm-tools --source https://api.nuget.org/v3/index.json --ignore-failed-sources

      - name: Set XCode Version
        if: runner.os == 'macOS'
        shell: bash
        run: |
          sudo xcode-select -s "/Applications/Xcode_15.4.app"
          echo "MD_APPLE_SDK_ROOT=/Applications/Xcode_15.4.app" >> $GITHUB_ENV

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERT }}
          p12-password: ${{ secrets.APPLE_CERT_PASSWORD }}

      - name: Import Provisioning Profile
        run: |
            echo ${{ secrets.APPLE_PROFILE }} | base64 --decode > SSW_Rewards_iOS_Distribution.mobileprovision
            mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
            cp SSW_Rewards_iOS_Distribution.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/

      - name: Build and sign
        run: dotnet publish src/MobileUI/MobileUI.csproj -v:diag -f:net8.0-ios -c:Release /p:ArchiveOnBuild=true /p:RuntimeIdentifier=ios-arm64 /p:CodeSignKey="${{ secrets.APPLE_CERT_NAME }}" /p:CodesignProvision="${{ secrets.APPLE_PROFILE_NAME }}"

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-ios-${{ inputs.build_number }}
          path: | 
            src/MobileUI/bin/Release/net8.0-ios/ios-arm64/publish/*.ipa
