@page "/notifications"

@using SSW.Rewards.Shared.DTOs.Notifications
@inject NavigationManager Navigation
@inject SSW.Rewards.ApiClient.Services.INotificationsService NotificationsService

<MudText Typo="Typo.h2">Notifications</MudText>
<MudText Typo="Typo.body1">All notification history</MudText>

<MudPaper Class="pa-4 mt-4 warm-grey-bg">
    <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="3">
        <MudTextField @bind-Value="_searchString"
                      Placeholder="Search by title"
                      Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
                      Class="mt-0" Immediate="true"
                      OnKeyDown="@(e => { if (e.Key == "Enter") LoadNotificationsFromSearch(); })"
                      OnBlur="LoadNotificationsFromSearch" />
        <MudCheckBox Value="_showArchived" ValueChanged="@OnShowArchivedChanged" Color="Color.Primary" Label="Show archived" Class="ml-4" T="bool" />
        <MudSpacer />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="@(() => Navigation.NavigateTo("/send-notification"))">
            Send Notification
        </MudButton>
    </MudStack>
    <MudTable ServerData="LoadNotifications" Loading="@_loading" Dense="true" Hover="true" Bordered="true" Striped="true" Class="mt-4" @ref="_table">
        <HeaderContent>
            <MudTh><MudTableSortLabel T="NotificationHistoryDto" SortLabel="Title">Title</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="NotificationHistoryDto" SortLabel="CreatedDateUtc">Created</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="NotificationHistoryDto" SortLabel="Status">Status</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel T="NotificationHistoryDto">Delivery Date</MudTableSortLabel></MudTh>
            <MudTh>
                <MudTooltip Text="This column shows the number of users who received the notification vs the total number of users we tried to send it to. Reasons for not being delivered include expired device tokens or users never approving/registering for notifications.">
                    <span style="cursor: help;">Delivery<span style="color: red;">*</span></span>
                </MudTooltip>
            </MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Title">@context.Title</MudTd>
            <MudTd DataLabel="Created">@context.CreatedDateUtc.ToLocalTime().ToString("g")</MudTd>
            <MudTd DataLabel="Status">
                @switch (context.Status)
                {
                    case NotificationStatus.Sent:
                        <MudChip Color="Color.Success" Variant="Variant.Filled">Sent</MudChip>
                        break;
                    case NotificationStatus.Failed:
                        <MudChip Color="Color.Error" Variant="Variant.Filled">Failed</MudChip>
                        break;
                    case NotificationStatus.Scheduled:
                        <MudChip Color="Color.Info" Variant="Variant.Filled">Scheduled</MudChip>
                        break;
                    default:
                        <MudChip Color="Color.Default" Variant="Variant.Filled">Not Sent</MudChip>
                        break;
                }
            </MudTd>
            <MudTd DataLabel="Delivery Date">
                @switch (context.Status)
                {
                    case NotificationStatus.Sent when context.SentOn != null:
                        @context.SentOn?.ToLocalTime().ToString("g")
                        break;
                    case NotificationStatus.Scheduled when context.ScheduledDate != null:
                        @context.ScheduledDate?.ToLocalTime().ToString("g") <span> (Scheduled)</span>
                        break;
                    default:
                        <span>-</span>
                        break;
                }
            </MudTd>
            <MudTd DataLabel="Delivery">
                <MudTooltip Text="Sent / Targeted">
                    <span>@context.NumberOfUsersSent / @context.NumberOfUsersTargeted</span>
                </MudTooltip>
            </MudTd>
            <MudTd DataLabel="Actions">
                @if (context.IsArchived)
                {
                    <span>Archived</span>
                }
                else
                {
                    <MudButton Variant="Variant.Outlined" Color="Color.Default" Size="Size.Small" OnClick="@(() => ArchiveNotification(context.Id))">
                        <MudIcon Icon="@Icons.Material.Filled.Archive" /> &nbsp; Archive
                    </MudButton>
                }
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="[ 10, 20, 50 ]" />
        </PagerContent>
    </MudTable>
</MudPaper>
