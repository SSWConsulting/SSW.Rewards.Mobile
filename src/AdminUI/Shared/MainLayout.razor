@using Microsoft.AspNetCore.Authorization
@attribute [Authorize (Roles = "Staff, Admin")]

@inherits LayoutComponentBase

<PageTitle>@_title</PageTitle>

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="AdminPortalMudTheme.Theme"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        <MudText Typo="Typo.h4">@_title</MudText>
    </MudAppBar>
    <MudDrawer ClipMode="DrawerClipMode.Never" 
    @bind-Open="_drawerOpen" 
    Elevation="1" 
    Variant="DrawerVariant.Mini" 
    OpenMiniOnHover="true" 
    Style="height: 100vh; overflow: hidden">
        <MudDrawerHeader Style="padding: 0; justify-content: space-around;">
                <MudImage Src="@_titleImage" />
        </MudDrawerHeader>
        <NavMenu IsOpen="@_drawerOpen"/>
    </MudDrawer>
    <MudMainContent>
        <MudContainer Fixed="true" Class="mb-16 pt-2">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


@code {
    private bool _isDarkMode;
    private MudThemeProvider? _mudThemeProvider;

    private string _title = "";
    private string _titleImage = "/images/ssw-rewards-logo.svg";
    
    [CascadingParameter]
    protected Task<AuthenticationState> AuthStat { get; set; } = null!;

    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;

        if (_drawerOpen)
        {
            _titleImage = "/images/ssw-rewards-logo.svg";
        }
        else
        {
            _titleImage = "/images/ssw-rewards-logo-collapsed.svg";
        }
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && _mudThemeProvider is not null)
        {
            _isDarkMode = true;
            StateHasChanged();
        }
    }
}