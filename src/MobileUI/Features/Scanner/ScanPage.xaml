<?xml version="1.0" encoding="utf-8"?>

<common:BaseContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
                        xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                        xmlns:scanner="clr-namespace:BarcodeScanning;assembly=BarcodeScanning.Native.Maui"
                        xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
                        xmlns:controls="clr-namespace:SSW.Rewards.Mobile.Controls"
                        xmlns:viewModels="clr-namespace:SSW.Rewards.Mobile.ViewModels"
                        xmlns:common="clr-namespace:SSW.Rewards.Mobile.Common"
                        BackgroundColor="{StaticResource Background}"
                        ControlTemplate="{DynamicResource PageTemplate}"
                        x:Class="SSW.Rewards.Mobile.Pages.ScanPage"
                        x:DataType="viewModels:ScanViewModel"
                        x:Name="Scan">
    <ContentPage.Resources>
        <ResourceDictionary>
            <x:Single x:Key="Threshold">1</x:Single>

            <toolkit:CompareConverter
                x:Key="GreaterThanOne"
                ComparisonOperator="Greater"
                ComparingValue="{StaticResource Threshold}" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <Grid RowDefinitions="*,Auto" BackgroundColor="{StaticResource FlyoutBackgroundColour}">
        <Border Grid.Row="0"
                StrokeThickness="0"
                StrokeShape="RoundRectangle 2"
                Margin="15"
                IsVisible="{Binding IsScanVisible}">
            <Grid>
                <scanner:CameraView x:Name="ScannerView"
                                    OnDetectionFinishedCommand="{Binding DetectionFinishedCommand}"
                                    CameraEnabled="{Binding IsCameraEnabled}"
                                    CurrentZoomFactor="{Binding CurrentZoomFactor, Mode=OneWayToSource}"
                                    RequestZoomFactor="{Binding RequestZoomFactor}"
                                    MinZoomFactor="{Binding MinZoomFactor, Mode=OneWayToSource}"
                                    MaxZoomFactor="{Binding MaxZoomFactor, Mode=OneWayToSource}"
                                    BarcodeSymbologies="QRCode"
                                    ViewfinderMode="True"
                                    TapToFocusEnabled="True"
                                    VibrationOnDetected="False" />

                <Image Source="qr_reticle" />

                <Grid VerticalOptions="End"
                      x:Name="ZoomButtons"
                      ColumnDefinitions="Auto,Auto"
                      HorizontalOptions="Center"
                      IsVisible="{Binding MaxZoomFactor, Converter={StaticResource GreaterThanOne}}"
                      ColumnSpacing="20"
                      Margin="0,0,0,50">
                    <Button Grid.Column="0"
                            CornerRadius="30"
                            WidthRequest="60"
                            HeightRequest="60"
                            Command="{Binding Path=ZoomOutCommand}">
                        <Button.ImageSource>
                            <FontImageSource Glyph="&#xf8c6;"
                                             FontAutoScalingEnabled="False"
                                             FontFamily="FluentIcons" />
                        </Button.ImageSource>
                    </Button>

                    <Button Grid.Column="1"
                            CornerRadius="30"
                            WidthRequest="60"
                            HeightRequest="60"
                            Command="{Binding Path=ZoomInCommand}">
                        <Button.ImageSource>
                            <FontImageSource Glyph="&#xf8c4;"
                                             FontAutoScalingEnabled="False"
                                             FontFamily="FluentIcons" />
                        </Button.ImageSource>
                    </Button>
                </Grid>
            </Grid>
        </Border>

        <VerticalStackLayout Grid.Row="0"
                             IsVisible="{Binding IsScanVisible, Converter={toolkit:InvertedBoolConverter}}"
                             VerticalOptions="Center"
                             Margin="30"
                             Spacing="30"
                             MaximumWidthRequest="500">
            <Grid ColumnDefinitions="40, *"
                  ColumnSpacing="10"
                  HorizontalOptions="Center">
                <toolkit:AvatarView Grid.Column="0"
                                    VerticalOptions="Center"
                                    HorizontalOptions="Center"
                                    ImageSource="{Binding ProfilePic}"
                                    HeightRequest="40"
                                    WidthRequest="40"
                                    CornerRadius="20"
                                    BorderColor="White"
                                    BorderWidth="2" />
                <Label Grid.Column="1"
                       VerticalOptions="Center"
                       VerticalTextAlignment="Center"
                       Text="{Binding UserName}"
                       Style="{StaticResource LabelBold}"
                       FontSize="Large"
                       TextColor="White" />
            </Grid>

            <Border StrokeThickness="0">
                <Border.StrokeShape>
                    <RoundRectangle CornerRadius="20" />
                </Border.StrokeShape>
                <Image Aspect="AspectFit" Source="{Binding QrCode}" />
            </Border>
        </VerticalStackLayout>

        <controls:SegmentedControl
            Grid.Row="1"
            IsVisible="{Binding UserHasQrCode}"
            Segments="{Binding Segments}"
            VerticalOptions="Start"
            HeightRequest="50"
            Margin="15,0,15,50"
            SelectedSegment="{Binding SelectedSegment}">
            <controls:SegmentedControl.Behaviors>
                <toolkit:EventToCommandBehavior
                    EventName="SelectionChanged"
                    Command="{Binding FilterBySegmentCommand}" />
            </controls:SegmentedControl.Behaviors>
        </controls:SegmentedControl>

    </Grid>
</common:BaseContentPage>