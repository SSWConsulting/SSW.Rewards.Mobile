<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:SSW.Rewards.Mobile.ViewModels"
             xmlns:controls="clr-namespace:SSW.Rewards.Mobile.Controls"
             xmlns:models="clr-namespace:SSW.Rewards.Models"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             BackgroundColor="{StaticResource FlyoutBackgroundColour}"
             x:Name="RewardList"
             ControlTemplate="{DynamicResource PageTemplate}"
             x:DataType="viewModels:RedeemViewModel"
             x:Class="SSW.Rewards.Mobile.Pages.RedeemPage">
    <ContentPage.Content>
        <Grid>
            <Grid RowDefinitions="Auto, *"
                  Margin="15"
                  RowSpacing="10">
                <Border Grid.Row="0"
                        BackgroundColor="{StaticResource Background}"
                        StrokeThickness="0"
                        StrokeShape="RoundRectangle 8"
                        Padding="3">
                    <Grid ColumnDefinitions="Auto, *, Auto">
                        <Border Grid.Column="0"
                                StrokeThickness="0"
                                StrokeShape="RoundRectangle 6"
                                HorizontalOptions="End"
                                VerticalOptions="Fill">
                            <Grid Padding="10" Background="{StaticResource ButtonBrush}">
                                <Label
                                    Text="&#xf290;"
                                    FontFamily="FA6Solid"
                                    HorizontalOptions="Center"
                                    VerticalOptions="Center"
                                    FontSize="14"
                                    Style="{StaticResource LabelBold}"
                                    InputTransparent="True" />
                            </Grid>
                        </Border>
                        <Border Grid.Column="2"
                                StrokeThickness="0"
                                StrokeShape="RoundRectangle 6"
                                HorizontalOptions="End"
                                VerticalOptions="Fill">
                            <HorizontalStackLayout Spacing="5"
                                                   Padding="8"
                                                   Background="{StaticResource ButtonBrush}">
                                <Label
                                    TextColor="{StaticResource Coin}"
                                    Text="&#xf51e;"
                                    FontFamily="FA6Solid"
                                    HorizontalOptions="Center"
                                    VerticalOptions="Center"
                                    FontSize="11"
                                    Style="{StaticResource LabelBold}"
                                    InputTransparent="True" />
                                <Label
                                    Text="{Binding Credits, StringFormat='{0:n0}'}"
                                    Style="{StaticResource LabelBold}"
                                    HorizontalOptions="Start"
                                    VerticalOptions="Center"
                                    FontSize="14"
                                    InputTransparent="True" />
                            </HorizontalStackLayout>
                        </Border>
                    </Grid>
                </Border>

                <RefreshView Grid.Row="1"
                             Command="{Binding RefreshRewardsCommand}"
                             IsRefreshing="{Binding IsRefreshing}">
                    <ScrollView>
                        <VerticalStackLayout Spacing="10">
                            <Grid RowDefinitions="Auto"
                                  x:Name="CarouselSection">
                                <Grid.Triggers>
                                    <MultiTrigger TargetType="Grid">
                                        <MultiTrigger.Conditions>
                                            <!-- Check if ready before hiding carousel to work around issue where first slide can show duplicates -->
                                            <BindingCondition Binding="{Binding CarouselRewards.Count}" Value="0" />
                                            <BindingCondition Binding="{Binding IsBusy}" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsVisible" Value="False" />
                                    </MultiTrigger>
                                </Grid.Triggers>
                                <CarouselView Grid.Row="0"
                                              x:Name="Carousel"
                                              HeightRequest="400"
                                              Loop="True"
                                              ItemsSource="{Binding CarouselRewards}"
                                              HorizontalScrollBarVisibility="Never"
                                              IndicatorView="QuizIndicator"
                                              Position="{Binding CarouselPosition}">
                                    <CarouselView.Behaviors>
                                        <mct:EventToCommandBehavior
                                            EventName="Scrolled"
                                            Command="{Binding CarouselScrolledCommand}" />
                                    </CarouselView.Behaviors>
                                    <CarouselView.ItemTemplate>
                                        <DataTemplate x:DataType="models:Reward">
                                            <controls:CarouselItem
                                                CarouselImage="{Binding CarouselImageUri}"
                                                Description="{Binding Name}"
                                                Points="{Binding Cost}"
                                                ButtonText="GET"
                                                ItemId="{Binding Id}"
                                                IsButtonDisabled="{Binding CanAfford, Converter={mct:InvertedBoolConverter}}"
                                                ButtonCommand="{Binding Source={x:Reference RewardList}, Path=BindingContext.RedeemRewardCommand}"/>
                                        </DataTemplate>
                                    </CarouselView.ItemTemplate>
                                </CarouselView>

                                <IndicatorView Grid.Row="0"
                                               SelectedIndicatorColor="{StaticResource SSWRed}"
                                               IndicatorColor="{StaticResource IndicatorColor}"
                                               IndicatorSize="4.5"
                                               HorizontalOptions="Center"
                                               VerticalOptions="End"
                                               Margin="0,0,0,15"
                                               x:Name="QuizIndicator" />
                            </Grid>
                            
                            <CollectionView
                                ItemsSource="{Binding Rewards}"
                                ItemsUpdatingScrollMode="KeepItemsInView"
                                ItemSizingStrategy="{OnPlatform iOS='MeasureFirstItem', Android='MeasureAllItems'}">
                                <CollectionView.ItemsLayout>
                                    <GridItemsLayout Orientation="Vertical" />
                                </CollectionView.ItemsLayout>
                                <CollectionView.ItemTemplate>
                                    <DataTemplate x:DataType="models:Reward">
                                        <Grid Padding="0,0,0,6">
                                            <controls:ListItem Title="{Binding Name}"
                                                               Description="{Binding Description}"
                                                               IsButtonDisabled="{Binding CanAfford, Converter={mct:InvertedBoolConverter}}"
                                                               ItemId="{Binding Id}"
                                                               Points="{Binding Cost}"
                                                               ButtonText="GET"
                                                               ThumbnailImage="{Binding ImageUri}"
                                                               PlaceholderGlyph="&#xf06b;"
                                                               ButtonCommand="{Binding Source={x:Reference RewardList}, Path=BindingContext.RedeemRewardCommand}">
                                                <controls:ListItem.Triggers>
                                                    <DataTrigger TargetType="controls:ListItem"
                                                                 Binding="{Binding IsPendingRedemption}"
                                                                 Value="True">
                                                        <Setter Property="ButtonText"
                                                                Value="QR" />
                                                    </DataTrigger>
                                                </controls:ListItem.Triggers>
                                            </controls:ListItem>
                                        </Grid>
                                    </DataTemplate>
                                </CollectionView.ItemTemplate>
                            </CollectionView>
                        </VerticalStackLayout>
                    </ScrollView>
                </RefreshView>
            </Grid>
            <ActivityIndicator
                HorizontalOptions="Center"
                VerticalOptions="Center"
                Color="{StaticResource SSWRed}"
                IsEnabled="{Binding IsBusy}"
                IsRunning="{Binding IsBusy}"
                IsVisible="{Binding IsBusy}" />
        </Grid>
    </ContentPage.Content>
</ContentPage>